<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - XF21</title>
        <link>https://xf21.dev/posts/</link>
        <description>所有文章 | XF21</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 19 Mar 2025 13:54:46 &#43;0800</lastBuildDate><atom:link href="https://xf21.dev/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Docker的代理设置</title>
    <link>https://xf21.dev/posts/docker%E7%9A%84%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link>
    <pubDate>Wed, 19 Mar 2025 13:54:46 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/docker%E7%9A%84%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid>
    <description><![CDATA[<p>
Create a file named <code>/etc/systemd/system/docker.service.d/http-proxy.conf</code> that adds the <code>HTTP_PROXY</code> environment variable:</p>
<div class="src src-conf">
<pre tabindex="0"><code class="language-conf" data-lang="conf">[Service]
Environment=&#34;HTTP_PROXY=http://proxy.example.com:3128&#34;
Environment=&#34;HTTPS_PROXY=https://proxy.example.com:3129&#34;</code></pre>
</div>]]></description>
</item>
<item>
    <title>Python清理字符串中的不可见字符</title>
    <link>https://xf21.dev/posts/python%E6%B8%85%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%8F%AF%E8%A7%81%E5%AD%97%E7%AC%A6/</link>
    <pubDate>Wed, 13 Nov 2024 10:04:18 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/python%E6%B8%85%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%8F%AF%E8%A7%81%E5%AD%97%E7%AC%A6/</guid>
    <description><![CDATA[<p>
需要处理一些字符串中的 <code>\u202d</code> 这样的特殊不可见的字符，网上试了一些方法，最好用的还是下面这个：</p>
<div class="src src-python">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">  <span class="n">new_str</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">c</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">input_str</span> <span class="k">if</span> <span class="n">c</span><span class="o">.</span><span class="n">isprintable</span><span class="p">())</span></span></span></code></pre></div>
</div>
<p>
😀</p>]]></description>
</item>
<item>
    <title>50个成为优秀程序员的法则[21-30]</title>
    <link>https://xf21.dev/posts/50%E4%B8%AA%E6%88%90%E4%B8%BA%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%B3%95%E5%88%9921-30/</link>
    <pubDate>Mon, 14 Oct 2024 11:26:37 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/50%E4%B8%AA%E6%88%90%E4%B8%BA%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%B3%95%E5%88%9921-30/</guid>
    <description><![CDATA[<p>
原文链接:  <a href="https://medium.com/@alexobidiegwu/50-laws-of-best-practices-in-python-6942c7cafd56">50 Coding Laws That Would Make You A Decent Programmer.</a></p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
21. 避免魔法数字
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
魔法数字是一个硬编码的值，可能会在稍后阶段更改，但因此很难更新。</p>
<div class="src src-sql">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="w">  </span><span class="o">#</span><span class="w"> </span><span class="err">❌</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">SELECT</span><span class="w"> </span><span class="n">TOP</span><span class="w"> </span><span class="mi">50</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">orders</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="o">#</span><span class="w"> </span><span class="err">✅</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">NUM_OF_ORDERS</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">50</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">SELECT</span><span class="w"> </span><span class="n">TOP</span><span class="w"> </span><span class="n">NUM_OF_ORDERS</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">orders</span></span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
22. 避免深度嵌套
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<div class="src src-python">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># ❌</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">x</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">y</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">do_something</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ✅</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">x</span> <span class="ow">and</span> <span class="n">y</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">do_something</span><span class="p">()</span></span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
23. 避免临时变量
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<div class="src src-python">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># ❌</span>
</span></span><span class="line"><span class="cl"><span class="n">temp_result</span> <span class="o">=</span> <span class="n">calculate</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">final_result</span> <span class="o">=</span> <span class="n">temp_result</span> <span class="o">*</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ✅</span>
</span></span><span class="line"><span class="cl"><span class="n">final_result</span> <span class="o">=</span> <span class="n">calculate</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span></span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-4" class="outline-2">
<h2 id="headline-4">
24. 避免使用神秘的缩写
</h2>
<div id="outline-text-headline-4" class="outline-text-2">
<div class="src src-python">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># ❌</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">calc</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">pass</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ✅</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">calculate_total_price</span><span class="p">(</span><span class="n">quantity</span><span class="p">,</span> <span class="n">unit_price</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">pass</span></span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-5" class="outline-2">
<h2 id="headline-5">
25. 避免硬编码Path
</h2>
<div id="outline-text-headline-5" class="outline-text-2">
<div class="src src-python">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># ❌</span>
</span></span><span class="line"><span class="cl"><span class="n">file_path</span> <span class="o">=</span> <span class="s2">&#34;/path/to/file.txt&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ✅</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">file_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s2">&#34;FILE_PATH&#34;</span><span class="p">)</span></span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-6" class="outline-2">
<h2 id="headline-6">
26. 使用使用Try…Catch…Finally语句
</h2>
<div id="outline-text-headline-6" class="outline-text-2">
<p>在编写代码时，最好也包括错误处理。这有助于加快调试过程并提高代码的复杂性，同时保持干净和可管理。</p>]]></description>
</item>
<item>
    <title>如何快速旋转多个pdf</title>
    <link>https://xf21.dev/posts/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%97%8B%E8%BD%AC%E5%A4%9A%E4%B8%AApdf/</link>
    <pubDate>Mon, 14 Oct 2024 10:32:15 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%97%8B%E8%BD%AC%E5%A4%9A%E4%B8%AApdf/</guid>
    <description><![CDATA[<p>
经常有单位同事找我帮忙旋转扫描的PDF文件，以前我都是用WPS一个一个打开、旋转然后保存，多做几次难免觉得不科学，于是找到了 pdfdtk 这样一个工具，试用了一下觉得挺方便。</p>]]></description>
</item>
<item>
    <title>思维肥胖危机</title>
    <link>https://xf21.dev/posts/%E6%99%BA%E5%8A%9B%E8%82%A5%E8%83%96%E5%8D%B1%E6%9C%BA/</link>
    <pubDate>Sat, 29 Jun 2024 10:04:17 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/%E6%99%BA%E5%8A%9B%E8%82%A5%E8%83%96%E5%8D%B1%E6%9C%BA/</guid>
    <description><![CDATA[<p>
一篇很有意思的文章，<a href="https://www.gurwinder.blog/p/the-intellectual-obesity-crisis">The Intellectual Obesity Crisis</a></p>
<blockquote>
<p>&#34;我们的大脑更容易受到暴饮暴食的伤害，而不是饥饿。&#34;
–Petrarch</p>
</blockquote>
<p>
伯克利研究人员2019年的一项研究发现，信息与食物一样作用于大脑产生多巴胺的奖励系统。简单地说，大脑将信息本身视为一种奖励；信息是否准确或有用并不重要，大脑仍然会渴望它，并在消费后感到满足，如果糖产生的效果一样。</p>]]></description>
</item>
<item>
    <title>50个成为优秀程序员的法则[11-20]</title>
    <link>https://xf21.dev/posts/50%E4%B8%AA%E6%88%90%E4%B8%BA%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%B3%95%E5%88%9911-20/</link>
    <pubDate>Thu, 20 Jun 2024 13:29:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xf21.dev/posts/50%E4%B8%AA%E6%88%90%E4%B8%BA%E4%BC%98%E7%A7%80%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%B3%95%E5%88%9911-20/</guid>
    <description><![CDATA[<p>原文链接:  <a href="https://medium.com/@alexobidiegwu/50-laws-of-best-practices-in-python-6942c7cafd56">50 Coding Laws That Would Make You A Decent Programmer.</a></p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
11. 不要成为一个肮脏的程序员
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
这意味着你要写干净的代码，但什么才是干净的代码呢？干净的代码结构良好，排列良好。干净的代码不会隐藏错误。它向程序员公开了bug可以隐藏的任何地方，并可以无需完全重构就可以修复其中的bug。</p>]]></description>
</item>
<item>
    <title>FFMPEG合并多个视频文件</title>
    <link>https://xf21.dev/posts/ffmpeg%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AA%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/</link>
    <pubDate>Thu, 20 Jun 2024 13:13:54 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/ffmpeg%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AA%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/</guid>
    <description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
需求
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<ul>
<li>合并多个mts文件</li>
<li>保存成H.264格式编码，视频格式为MP4格式。</li>
<li>视频码流率：2M/s-3M/s。</li>
<li>视频分辨率：高清16：9拍摄，请设定为1920×1080。</li>
<li>视频文件大小不超过2G</li>
</ul>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
方法
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>
使用神器 <code>ffmpeg</code> 来进行这个工作。</p>]]></description>
</item>
<item>
    <title>通过lti1.3将jupyterhub添加到moodle中作为外部工具</title>
    <link>https://xf21.dev/posts/%E9%80%9A%E8%BF%87lti1.3%E5%B0%86jupyterhub%E6%B7%BB%E5%8A%A0%E5%88%B0moodle%E4%B8%AD%E4%BD%9C%E4%B8%BA%E5%A4%96%E9%83%A8%E5%B7%A5%E5%85%B7/</link>
    <pubDate>Wed, 19 Jun 2024 18:04:21 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/%E9%80%9A%E8%BF%87lti1.3%E5%B0%86jupyterhub%E6%B7%BB%E5%8A%A0%E5%88%B0moodle%E4%B8%AD%E4%BD%9C%E4%B8%BA%E5%A4%96%E9%83%A8%E5%B7%A5%E5%85%B7/</guid>
    <description><![CDATA[<p>
这些年一直想用Jupyterhub作为学习平台来尝试一些教学活动，但Jupyterhub用来进行学习管理方面的功能非常欠缺，好在有一个叫LTI（Learning Tools Interoperability，学习工具互操作性）的标准，可以方便的在各个教育技术系统之间无缝集成，所以尝试了一下通过LTI将Jupyterhub作为外部工具添加到Moodle中。</p>]]></description>
</item>
<item>
    <title>Debian系安装ping</title>
    <link>https://xf21.dev/posts/debian%E7%B3%BB%E5%AE%89%E8%A3%85ping/</link>
    <pubDate>Fri, 14 Jun 2024 14:07:34 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/debian%E7%B3%BB%E5%AE%89%E8%A3%85ping/</guid>
    <description><![CDATA[<p>
很多Docker镜像基于Debian或者ubuntu的精简版本，进入容器需要 <code>ping</code> 的时候经常找不到 <code>ping</code> ，需要安装，安装的命令如下：</p>
<div class="src src-bash">
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">  apt install iputils-ping</span></span></code></pre></div>
</div>
<p>
有时候还需要查看自己的代理是否生效，可以使用下面的命令：</p>]]></description>
</item>
<item>
    <title>Python中的bytes对象以及UTF-8编码</title>
    <link>https://xf21.dev/posts/python%E4%B8%AD%E7%9A%84bytes%E5%AF%B9%E8%B1%A1%E4%BB%A5%E5%8F%8Autf-8%E7%BC%96%E7%A0%81/</link>
    <pubDate>Fri, 07 Jun 2024 10:59:46 &#43;0800</pubDate>
    <author>Wuxf</author>
    <guid>https://xf21.dev/posts/python%E4%B8%AD%E7%9A%84bytes%E5%AF%B9%E8%B1%A1%E4%BB%A5%E5%8F%8Autf-8%E7%BC%96%E7%A0%81/</guid>
    <description><![CDATA[<p>
看了 <a href="https://www.thepythoncodingstack.com/p/bytes-python-built-in-unicode-utf-8-encoding">`bytes`: The Lesser-Known Python Built-In Sequence • And Understanding UTF-8 Encoding</a> 之后自己尝试了一下中文,加深了对UTF-8的一点点理解.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Python的bytes对象
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
<code>bytes</code> 是由单个字节构成的不可变整数序列。序列中的每个值的大小被限制为 0 &lt;= x &lt; 256 (如果违反此限制将引发 <code>ValueError</code>)。</p>]]></description>
</item>
</channel>
</rss>
